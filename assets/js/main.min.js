document.addEventListener('DOMContentLoaded', function () {
  const sidebarNav = document.querySelector('.sidebar-nav');
  if (!sidebarNav) return;

  const storageKey = 'sidebarOpenMenu';

  // On page load, check session storage and open the correct menu.
  // This persists the open state across page navigation.
  const openMenuId = sessionStorage.getItem(storageKey);
  if (openMenuId) {
    const parentLink = sidebarNav.querySelector(`li > a[href="${openMenuId}"]`);
    if (parentLink) {
      const parentLi = parentLink.parentElement;
      const childLinks = Array.from(parentLi.querySelectorAll('ul a'));
      const validPaths = [parentLink.getAttribute('href'), ...childLinks.map(a => a.getAttribute('href'))];

      // Check if the current page's path is the parent or one of its children.
      if (validPaths.includes(window.location.pathname)) {
        parentLi.classList.add('open');
      } else {
        // If we've navigated to a page outside this menu, clear the stored state.
        sessionStorage.removeItem(storageKey);
      }
    }
  }

  // Add click listeners to all potential parent items.
  const allLis = sidebarNav.querySelectorAll('li');
  allLis.forEach(li => {
    const submenu = li.querySelector(':scope > ul');
    if (submenu) { // This li is a parent.
      const parentLink = li.querySelector(':scope > a');
      if (parentLink) {
        parentLink.addEventListener('click', function (event) {
          const parentId = parentLink.getAttribute('href');
          const isAlreadyOpen = li.classList.contains('open');

          if (isAlreadyOpen) {
            // If clicking an open menu, just close it and prevent navigation.
            event.preventDefault();
            li.classList.remove('open');
            sessionStorage.removeItem(storageKey);
          } else {
            // If clicking a closed menu, store its ID and let navigation proceed.
            sessionStorage.setItem(storageKey, parentId);
            // The next page load will handle opening the correct menu.
          }
        });
      }
    }
  });
});